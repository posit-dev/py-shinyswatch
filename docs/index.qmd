---
title: shinyswatch

engine: python

execute:
  echo: false
---

```{python}
import shinylive

def shinylive_example_url(name: str) -> str:
    return shinylive.url_encode(
        f"examples/{name}/app.py",
        f"examples/{name}/requirements.txt",
    )
```


[Bootswatch](https://bootswatch.com/) + Bootstrap 5 themes for [Shiny](https://shiny.rstudio.com/py/).


Here are just three of the **25 themes** in shinyswatch:

| Minty                      | Sketchy                        | Superhero                          |
|----------------------------|--------------------------------|------------------------------------|
| ![Minty](https://raw.githubusercontent.com/rstudio/py-shinyswatch/v0.2.2/readme_minty.png) | ![Sketchy](https://raw.githubusercontent.com/rstudio/py-shinyswatch/v0.2.2/readme_sketchy.png) | ![Superhero](https://raw.githubusercontent.com/rstudio/py-shinyswatch/v0.2.2/readme_superhero.png) |


## Installation

```sh
pip install shinyswatch
```

To install the latest development version from this repository:

```sh
pip install https://github.com/rstudio/py-shinyswatch/tarball/main
```

## Usage

To use a theme, add a `shinyswatch.theme` theme object to your App's UI definition.

```python
# Minty theme
shinyswatch.theme.minty

# Sketchy theme
shinyswatch.theme.sketchy

# Superhero theme
shinyswatch.theme.superhero
```

Example Shiny application:

::: {.content-visible when-format="markdown"}

<table>
<thead><tr>
<th>File: <code>app.py</code></th>
<th>Screenshot</th>
</tr></thead>
<tbody><tr><td>

```{.python}
{{< include "examples/darkly/app.py" >}}
```

</td><td>

![darkly theme](https://raw.githubusercontent.com/rstudio/py-shinyswatch/v0.2.2/readme_darkly.png)

</td></tr></tbody></table>

:::

::: {.content-visible when-format="html"}
```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: horizontal
#| viewerHeight: 800
## file: app.py
{{< include "examples/darkly/app.py" >}}


## file: requirements.txt
{{< include "examples/darkly/requirements.txt" >}}

```
:::

> Note: When writing [shiny apps that use shinyswatch on shinylive.io](`{python} shinylive_example_url("darkly")`), remember to add `shinyswatch` to your `requirements.txt` file!


## Theme picker

To add a theme picker to your app, add the theme picker UI and server functions to your app's UI and server definitions.

::: {.content-visible when-format="markdown"}
[Demo **theme picker** app on shinylive.io](`{python} shinylive_example_url("theme-picker")`).
:::

::: {.content-visible when-format="html"}
```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: horizontal
#| viewerHeight: 800
## file: app.py
{{< include "examples/theme-picker/app.py" >}}


## file: requirements.txt
{{< include "examples/theme-picker/requirements.txt" >}}

```
:::

## Plot Theming

shinyswatch themes include a `.colors` attribute that can be used to theme plots or other outputs and UI elements.
In the example below, try changing the theme and re-running the app to see how the plot changes.

::: {.content-visible when-format="markdown"}
[Demo **plot theming** app on shinylive.io](`{python} shinylive_example_url("plot-theming")`).
:::

::: {.content-visible when-format="html"}
```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: horizontal
#| viewerHeight: 800
## file: app.py
{{< include "examples/plot-theming/app.py" >}}


## file: requirements.txt
{{< include "examples/plot-theming/requirements.txt" >}}

```
:::

::: {.content-visible when-format="markdown"}
## Development

If you want to do development on shinyswatch for Python:

```sh
pip install -e ".[dev,test,docs]"
```

### Examples

There are multiple examples in the shinyswatch repo.

<!-- You can view them online at: [shinyswatch.theme.darkly](http://rstudio.github.io/py-shinyswatch/reference/theme.darkly.html) and [get_theme](http://rstudio.github.io/py-shinyswatch/reference/get_theme.html). -->

To run the demos locally, you can run the examples by calling:

```sh
python3 -m shiny run examples/basic-darkly/app.py
python3 -m shiny run examples/big-sketchy/app.py
python3 -m shiny run examples/components/app.py
python3 -m shiny run examples/theme-picker/app.py
```
:::
